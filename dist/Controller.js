// Generated by CoffeeScript 1.10.0
(function() {
  var KanikuController,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  module.exports = KanikuController = (function(superClass) {
    extend(KanikuController, superClass);

    function KanikuController() {
      KanikuController.__super__.constructor.apply(this, arguments);
      this.models = [];
      this.updaters = [];
    }

    KanikuController.prototype.onEnter = function() {
      KanikuController.__super__.onEnter.apply(this, arguments);
      this.createModels();
      this.createViews();
      this.createUpdaters();
      if (this.updaters.length > 0 || this.models.some(function(it) {
        return it.needsUpdating();
      })) {
        return this.scheduleUpdate();
      }
    };

    KanikuController.prototype.update = function(dt) {
      var i, j, len, len1, model, ref, ref1, updater;
      KanikuController.__super__.update.apply(this, arguments);
      ref = this.updaters;
      for (i = 0, len = ref.length; i < len; i++) {
        updater = ref[i];
        if (updater.update != null) {
          updater.update(dt);
        } else {
          updater(dt);
        }
      }
      ref1 = this.models;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        model = ref1[j];
        if (model.needsUpdating()) {
          model.update(dt);
        }
      }
    };

    KanikuController.prototype.addModel = function(model) {
      return this.models.push(model);
    };

    KanikuController.prototype.addUpdater = function(updater) {
      return this.updaters.push(updater);
    };

    KanikuController.prototype.createModels = function() {};

    KanikuController.prototype.createViews = function() {};

    KanikuController.prototype.createUpdaters = function() {};

    return KanikuController;

  })(cc.Scene);

}).call(this);
